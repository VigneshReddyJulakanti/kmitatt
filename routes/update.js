const express = require("express");
const Student = require("../models/Student");
const Ltime=require("../models/LastUpdate")
const router = express.Router();
const axios =require("axios")

let data=["2420429","2420551","2420214","2420707","2420113","2420450","2420655","2420369","2420431","2420284","2420378","2420745","2420423","2420239","2420619","2420448","2420304","2420119","2420645","2420611","2420204","2420436","2420301","2420294","2420120","2420717","2420165","2420363","2420212","2420457","2420168","2420418","2420153","2420384","2420628","2420272","2420612","2420270","2420218","2420289","2420356","2420111","2420147","2420447","2420208","2420458","2420352","2420468","2420631","2420556","2420402","2420444","2420456","2420729","2420779","2420117","2420399","2420546","2420154","2420391","2420123","2420170","2420660","2420731","2420422","2420216","2420183","2420178","2420261","2420673","2420347","2420667","2420593","2420237","2420344","2420110","2420637","2420411","2420403","2420373","2420376","2420264","2420719","2420678","2420374","2420252","2420250","2420451","2420661","2420409","2420777","2420277","2420627","2420271","2420432","2420385","2420107","2420764","2420647","2420679","2420370","2420181","2420426","2420443","2420414","2420306","2420575","2420220","2420397","2420349","2420406","2420640","2420434","2420446","2420292","2420454","2420275","2420670","2420227","2420817","2420571","2420388","2420428","2420636","2420169","2420467","2420171","2420438","2420638","2420462","2420285","2420359","2420459","2420413","2420690","2420770","2420258","2420371","2420658","2420387","2420741","2420279","2420199","2420364","2420118","2420132","2420442","2420141","2420353","2420728","2420234","2420137","2420689","2420127","2420228","2420273","2420355","2420223","2420296","2420219","2420793","2420724","2420739","2420758","2420179","2420288","2420819","2420367","2420201","2420607","2420305","2420795","2420257","2420427","2420762","2420424","2420235","2420605","2420398","2420121","2420618","2420400","2420421","2420723","2420251","2420445","2420260","2420419","2420368","2420372","2420164","2420790","2420282","2420156","2420122","2420621","2420680","2420241","2420420","2420425","2420256","2420626","2420501","2420703","2420149","2420382","2420440","2420449","2420126","2420381","2420286","2420439","2420244","2420787","2420393","2420267","2420283","2420278","2420390","2420295","2420380","2420410","2420404","2420587","2420687","2420392","2420433","2420401","2420242","2420362","2420379","2420767","2420357","2420635","2420105","2420695","2420595","2420565","2420754","2420721","2420809","2420582","2420599","2420106","2420303","2420657","2420597","2420649","2420752","2420654","2420685","2420799","2420166","2420572","2420566","2420430","2420686","2420395","2420712","2420297","2420702","2420463","2420727","2420736","2420796","2420124","2420209","2420648","2420408","2420416","2420142","2420377","2420155","2420761","2420460","2420230","2420750","2420238","2420290","2420818","2420386","2420693","2420146","2420664","2420198","2420268","2420784","2420643","2420820","2420396","2420766","2420299","2420609","2420570","2420114","2420744","2420567","2420232","2420366","2420152","2420623","2420701","2420580","2420816","2420811","2420780","2420641","2420573","2420466","2420706","2420725","2420713","2420813","2420177","2420263","2420346","2420361","2420350","2420705","2420776","2420769","2420774","2420598","2420560","2420405","2420715","2420694","2420781","2420742","2420765","2420555","2420365","2420698","2420287","2420302","2420614","2420115","2420194","2420274","2420354","2420722","2420696","2420348","2420229","2420415","2420360","2420568","2420697","2420135","2420630","2420351","2420293","2420797","2420389","2420345","2420125","2420455","2420108","2420583","2420437","2420375","2420815","2420189","2420412","2420763","2420676","2420461","2420116","2420812","2420608","2420646","2420615","2420407","2420383","2420716","2420343","2420185","2420714","2420464","2420651","2420588","2420709","2420603","2420738","2420730","2420441","2420469","2420669","2420104","2420465","2420674","2420574","2420633","2420112","2420240","2420785","2420559","2420806","2420668","2420417","2420644","2420671","2420549","2420771","2420138","2420452","2420735","2420733","2420394","2420688","2420768","2420453","2420507","2420708","2420792","2420542","2420496","2420529","2420205","2420280","2420782","2420298","2420604","2420248","2420684","2420531","2420652","2420666","2420511","2420538","2420624","2420525","2420535","2420537","2420505","2420757","2420534","2420543","2420802","2420755","2420504","2420512","2420490","2420539","2420515","2420161","2420509","2420281","2420513","2420226","2420536","2420494","2420759","2420530","2420532","2420592","2420255","2420253","2420300","2420772","2420516","2420783","2420508","2420662","2420650","2420190","2420519","2420788","2420210","2420786","2420514","2420249","2420503","2420800","2420562","2420564","2420552","2420187","2420805","2420804","2420553","2420634","2420591","2420548","2420498","2420581","2420663","2420211","2420734","2420526","2420291","2420527","2420606","2420269","2420710","2420803","2420540","2420596","2420533","2420753","2420798","2420276","2420499","2420521","2420266","2420502","2420747","2420520","2420528","2420247","2420497","2420629","2420518","2420217","2420732","2420243","2420683","2420578","2420544","2420510","2420101","2420522","2420517","2420541","2420500","2420600","2420613","2420760","2420561","2420814","2420801","2420524","2420585","2420213","2420334","2420150","2420778","2420332","2420632","2420737","2420196","2420134","2420321","2420246","2420590","2420333","2420327","2420794","2420315","2420175","2420325","2420320","2420309","2420545","2420307","2420192","2420207","2420310","2420337","2420102","2420746","2420317","2420338","2420313","2420193","2420495","2420700","2420322","2420756","2420489","2420195","2420340","2420743","2420336","2420493","2420197","2420222","2420773","2420577","2420492","2420167","2420318","2420329","2420328","2420675","2420186","2420200","2420589","2420151","2420569","2420563","2420699","2420314","2420324","2420639","2420140","2420129","2420148","2420339","2420128","2420130","2420491","2420808","2420308","2420810","2420206","2420342","2420331","2420642","2420157","2420620","2420311","2420136","2420557","2420718","2420224","2420133","2420692","2420316","2420103","2420602","2420672","2420341","2420326","2420558","2420176","2420139","2420245","2420319","2420145","2420174","2420594","2420131","2420312","2420323","2420586","2420775","2420749","2420691","2420625","2420682","2420617","2420160","2420335","2420236","2420726","2420601","2420159","2420330","2420550","2420144","2420677","2420172","2420653","2420807","2420506","2420471","2420233","2420474","2420202","2420554","2420791","2420182","2420476","2420487","2420547","2420482","2420173","2420481","2420158","2420221","2420473","2420480","2420215","2420576","2420191","2420488","2420477","2420254","2420748","2420259","2420180","2420720","2420163","2420203","2420231","2420479","2420610","2420478","2420579","2420751","2420475","2420188","2420162","2420486","2420483","2420704","2420740","2420472","2420584","2420711","2420616","2420789","2420262","2420143","2420485","2420484","2420470","2420659","2420265"]

let tdata=["2420470","2420143","2420485","2420438"];

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
let add=async(sid,rno,name,percentage)=>{

try{
  console.log("In add")
    let stu = await Student.findOne({sid});

    if (stu==null){

      let newstu={sid:sid.toString(),rno:rno.toString(),name,percentage:percentage.toString()};
      await Student.create(newstu);

    }else{
    console.log("stu",stu)
    let newstu={sid,rno,name,percentage,date:(new Date()).getTime()};
   

    await Student.findByIdAndUpdate(
        stu._id,
        { $set: newstu},
        { new: true }
      );
    }

      return "yes"
    }catch(e){
        console.log(e)
    }


}


let  boom=async()=>{
  console.log("in boom")
  let cnt=0;
    for(let i of data){
      
      try{
        if(cnt%60==0){
        axios.get("https://kmitattbackend.herokuapp.com/");
        }
        cnt+=1;
        let sendDate = (new Date()).getTime();
    await axios.post(`http://teleuniv.in/netra/api.php`, {
        "method":"32",
        "rollno":i
      }).then(res2=>(axios.post(`http://teleuniv.in/netra/api.php`, {
        "method":"314",
        "rollno":i
      }).then(res=>(add(i,res2.data.hallticketno,res2.data.firstname,res.data.overallattperformance.totalpercentage)

      )))) 
      let receiveDate = (new Date()).getTime();
      // console.log(receiveDate-sendDate)
      await sleep(10000+receiveDate - sendDate)
      console.log(i);
    }catch(err){
      console.log(err)
    }
    }
  
}

router.get("/",async(req,res)=>{

  let stu = await Ltime.findOne({sid:"boom"});

  if(stu!=null){
    let pres=(new Date()).getTime();
    hrs=(pres-stu.date)/3600000;
    // console.log(hrs)

    min=(pres-stu.date)/60000;
    if(hrs<(process.env.hrs|| 14)){
      return res.json({"success":"false"});
    }

    // if(min<1){
    //   return res.json({"sucess":"false"})
    // }
  }

  await updateTimeHelper();


   await boom();



   return res.json({"success":"true"})
})

let updateTimeHelper=async()=>{

  try{

    let stu = await Ltime.findOne({sid:"boom"});

    if (stu==null){

      let newt={sid:"boom",date:(new Date()).getTime()};
      await Ltime.create(newt);

    }else{
    console.log("stu",stu)
    let newt={sid:"boom",date:(new Date()).getTime()};
   

    await Ltime.findByIdAndUpdate(
        stu._id,
        { $set: newt},
        { new: true }
      );
    }

      return "yes"
    }catch(e){
        console.log(e)
    }

return "done";
}
router.get("/updateTime",async(req,res)=>{
  await updateTimeHelper();
  return res.json({"success":"true"})
})


router.post("/student",async(req,res)=>{
let st=await Student.findOne({sid:req.body.sid});

if(st==null){
  return res.json({"success":"false"})
}

return res.json({"success":"true","name":st.name,"rno":st.rno,"percentage":st.percentage,"date":st.date})
})


module.exports=router;